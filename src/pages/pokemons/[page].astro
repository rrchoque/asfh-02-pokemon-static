---
import type { GetStaticPaths } from "astro";
import PokemonCard from "../../components/pokemons/PokemonCard.astro";
import type { PokemonListResponse } from "../../interfaces/pokemon-list.response";
import MainLayout from "../../layouts/MainLayout.astro";

const resp = await fetch("https://pokeapi.co/api/v2/pokemon");
const data = (await resp.json()) as PokemonListResponse;

export const getStaticPaths = (async ({ paginate }) => {
  const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  const { results } = (await resp.json()) as PokemonListResponse;

  return paginate(results, { pageSize: 20 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
console.log("ðŸš€ ~ page:", page);

const title = "PokÃ©mon Static | Home";
---

<MainLayout title={title}>
  <h1 class="text-3xl">Listado de PokÃ©mons</h1>
  <hr />
  <section
    aria-label="Listado de PokÃ©mons"
    class="grid grid-cols-1 sm:grid-cols-4 md:grid-cols-5 gap-4 mt-5"
  >
    {
      page.data.map((pokemon) => (
        <PokemonCard url={pokemon.url} name={pokemon.name} />
      ))
    }
  </section>

  <section class="flex mt-10 gap-2 items-center">
    <!-- {
      page.url.prev && (
        <a class="btn" href={page.url.prev}>
          Anteriores
        </a>
      )
    } -->
    <a
      class:list={[
        "btn",
        {
          disabled: !page.url.prev,
        },
      ]}
      href={page.url.prev}
    >
      Anteriores
    </a>

    <a
      class:list={[
        "btn",
        {
          disabled: !page.url.next,
        },
      ]}
      href={page.url.next}>Siguientes</a
    >

    <div class="flex flex-1"></div>

    <span class="text-xl font-bold">PÃ¡gina {page.currentPage}</span>
  </section>
</MainLayout>

<style>
  .btn {
    @apply bg-blue-500 p-2 text-white rounded-md;
  }

  .disabled {
    @apply bg-gray-600 text-gray-400;
  }
</style>
